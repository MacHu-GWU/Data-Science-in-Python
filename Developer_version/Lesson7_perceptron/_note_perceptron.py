"""
感知算法适合解决如下问题：

    有一个sample数为k的数据集，每个样本的类标只有两类（不妨设为+1, -1）例如：
    s1 = (x1, x2, ... xn) 每个样本有n个特征
    
    我们假设有一个理想的感知器 w = (w0, w1, ..., wn)可以使得对于s1 ~ sn都有以下成立：
    
        total = f(x1, x2, ..., xn)
              = w0*1 + w1*x1 + w2*x2 + ... + wn*xn # <= 感知器的计算值
        if total > 0:
            class = +1 # <= 这就是感知器的输出
        else:
            class = -1
            
    那么这就是一个理想的感知器
    
对于数据集线性可分的情况，我们有如下算法来解决这个问题：
    起始给一个任意初始化的 (w0, w1, ... wn)
    对数据集中的每个样本进行验证，只要碰到有输出结果不对的情况
    那么就立刻修正 w' = w + dw
    
    dw = 步长 * (正确的输出 - 感知器输出) * x
    
    这个原理是：
        如果 正确的输出 - 感知器输出 = 2
            说明正确输出应该是1，而感知器输出了-1，那么我们希望
            新的感知器能让 w.*x变大，显然这里的dw能做到这一点
        反之亦然
    
    然后不断重复这个过程，直到感知器使得全部分类正确为止
"""     